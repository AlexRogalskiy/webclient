name: webclient-master

on:
  push:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2
          
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '15'

      - name: Install and build Angular
        run: |
          npm install
          npm run build
          version=$(node -p "require('./package.json').version")
          cp dist/index.html dist/404.html
          sed -i -e "s/#WEBCLIENT_VERSION#/${version}/" dist/README.md
          index_hash=$(openssl dgst -sha256 dist/index.html | awk '{print $NF}')
          sed -i -e "s/#INDEX_HASH#/${index_hash}/" dist/README.md

      - name: Tag release and publish to gh-pages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          version=$(node -p "require('./package.json').version")
          git config --global user.email "support@ctemplar.com"
          git config --global user.name "CTemplar"
          git tag v${version}
          git push --tags
          git checkout -B gh-pages
          git add -f dist
          git commit -am "Release v${version}"
          git filter-branch -f --prune-empty --subdirectory-filter dist
          git push -f origin gh-pages
          git checkout -

      - name: Publish to Iceland server
        run: |
          ${{ secrets.DEPLOY_COMMAND }} webclient-master
          
      - name: Check out Git repository
        uses: actions/checkout@v2
        with:
          fetch-depth: '0'

      - uses: pixta-dev/repository-mirroring-action@v1
        with:
          target_repo_url:
            git@codeberg.org:CTemplar/webclient.git
          ssh_private_key:
            ${{ secrets.CODEBERG_SSH_PRIVATE_KEY }}

  pre-release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2
        with:
          submodules: recursive
          
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '15'

      - name: Prepare for app notarization
        if: startsWith(matrix.os, 'macos')
        # Import Apple API key for app notarization on macOS
        run: |
          mkdir -p ~/private_keys/
          echo '${{ secrets.api_key }}' > ~/private_keys/AuthKey_${{ secrets.api_key_id }}.p8
          
      - name: Build and pre-release Electron apps
        uses: samuelmeuli/action-electron-builder@v1
        env:
          # macOS notarization API key
          API_KEY_ID: ${{ secrets.api_key_id }}
          API_KEY_ISSUER_ID: ${{ secrets.api_key_issuer_id }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          build_script_name: 'build:electron'
          release: true
          mac_certs: ${{ secrets.mac_certs }}
          mac_certs_password: ${{ secrets.mac_certs_password }}
